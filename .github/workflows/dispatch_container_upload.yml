name: Dispatch push containers to registries

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to install into container
        required: true
        default: 'latest'

jobs:
  push_docker_containers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr.io with docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to quay.io with docker
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ vars.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}

      - name: Log in to docker.io with docker
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ vars.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_TOKEN }}

      - id: latest-version
        name: Get latest version
        if: ${{ github.event.inputs.version }} == "latest"
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.CI_TOKEN }}

      - name: Set version
        id: set-version
        run: |
          if [[ ${{ github.event.inputs.version }} != "latest" ]]; then
            version=${{ github.event.inputs.version }}
          else
            version=${{ steps.latest-version.outputs.release }}
          fi
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      - name: Build and push docker containers
        uses: docker/build-push-action@v6
        with:
          build-args: VERSION=${{ steps.set-version.outputs.version }}
          file: .github/dockerfiles/pixi_watershed.df
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/watershed-sv:${{ steps.set-version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/watershed-sv:latest
            quay.io/${{ vars.QUAYIO_USERNAME }}/watershed-sv:${{ steps.set-version.outputs.version }}
            quay.io/${{ vars.QUAYIO_USERNAME }}/watershed-sv:latest
            docker.io/${{ vars.DOCKERIO_USERNAME }}/watershed-sv:${{ steps.set-version.outputs.version }}
            docker.io/${{ vars.DOCKERIO_USERNAME }}/watershed-sv:latest
